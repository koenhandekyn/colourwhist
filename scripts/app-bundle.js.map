{"version":3,"sources":["src/app.js","src/environment.js","src/game.js","src/games.js","src/gundb.js","src/main.js","src/resources/index.js","app.scss"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","nav","sum","a","b","debug","testing","KeysValueConverter","toView","value","Object","keys","Game","gunDb","gametypes","players","score","current_score","current_gametype","current_players","no_players","db","totals","rounds","Map","activate","params","id","gameDb","get","val","game","on","round","set","delete","sortedRounds","Array","from","entries","k","v","sort","nr","t1","r","s1","reduce","t2","s2","t3","s3","t4","s4","console","log","deactivate","off","selectGameType","event","gametype","srcElement","submit","Number","parseInt","scores","countSelected","x","size","removeRound","put","Games","gamesDb","games","removeGame","newGame","fetch","then","response","text","GunDb","Gun","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n  }\n\n  configureRouter(config, router) {\n    config.title = 'Colour Whist';\n    config.map([\n      { route: ['', 'games'], name: 'games', moduleId: 'games', nav: false,  title: 'Games' },\n      { route: ['games/:id'], name: 'game',  moduleId: 'game',  nav: false,  title: 'Game' },\n      // { route: 'welcome', name: 'welcome', moduleId: 'welcome', nav: true, title: 'Welcome' },\n    ]);\n\n    this.router = router;\n  }\n}\n\nexport const sum = (a,b) => a+b;\n","export default {\n  debug: true,\n  testing: true\n};\n","import {GunDb} from 'gundb';\nimport {inject} from 'aurelia-framework';\nimport {sum} from './app';\n// import {computedFrom} from 'aurelia-framework';\n// import {observable} from 'aurelia-framework';\n\n// converter to help to iterate over a Hash\nexport class KeysValueConverter {\n  toView(value){\n    return Object.keys(value);\n  }\n}\n\n@inject(GunDb)\nexport class Game {\n\n  // @observable totals;\n  // totalsChanged(newValue, oldValue) {\n  //   console.log('totals changed', newValue, oldValue);\n  // }\n\n  constructor(gunDb) { \n    this.gunDb = gunDb.db;\n    this.players = ['koen', 'kevin', 'gert', 'yves'];\n    this.totals = [0,0,0,0];\n    // this.rounds = [];\n    this.rounds = new Map();\n  }\n\n  activate(params) {\n    this.id = params['id'];\n    this.gameDb = this.gunDb.get(this.id);\n    this.gameDb.val( game => { this.game = game });\n    this.gameDb.get('rounds').map().on((round,id) => { \n      if (round) {         \n        this.rounds.set(id, round);\n      } else { \n        this.rounds.delete(id);\n      }\n      // derive sorted array\n      this.sortedRounds = Array.from(this.rounds.entries())\n                                .map( ([k,v]) => { v.id=k; return v; } )\n                                .sort( (a,b) => b.nr - a.nr );\n      // calculate and store totals\n      let t1 = this.sortedRounds.map( r => r.s1 ).reduce(sum, 0);\n      let t2 = this.sortedRounds.map( r => r.s2 ).reduce(sum, 0);\n      let t3 = this.sortedRounds.map( r => r.s3 ).reduce(sum, 0);\n      let t4 = this.sortedRounds.map( r => r.s4 ).reduce(sum, 0);\n      this.totals = [t1, t2, t3, t4];\n\n      console.log(this.totals);\n      console.log(this.sortedRounds.map( r => r.nr ));\n    });\n  }  \n\n  deactivate() {\n    console.log(\"stop listening to gundb events\");\n    this.gameDb.get('rounds').off();\n  }\n\n  // TODO turn this into a const\n  gametypes = {\n    '8': { players: 2, score: 2 },\n    '9': { players: 2, score: 2 },\n    '10': { players: 2, score: 2 },\n    'miserie': { players: 1, score: 4 },\n    'abondance': { players: 1, score: 6 },\n    'solo slim': { players: 1, score: 24 },\n    'pas': { players: 0, score: 0 }\n  };\n\n  current_score = 2;\n  current_gametype = '8';\n  current_players = this.no_players();\n\n  selectGameType(event) {\n    let gametype = this.gametypes[event.srcElement.value];\n    this.current_score = gametype.score;\n  }\n\n  get countSelected() {\n    return this.current_players.map( x => x ? 1 : 0).reduce(sum, 0);\n  }\n\n  get canSubmit() {\n    return this.countSelected == this.gametypes[this.current_gametype].players;\n  }\n\n  submit() {\n    // the current score\n    let score = Number.parseInt(this.current_score);\n    // the scores\n    let scores = (this.countSelected == 2) ?\n                    [0,1,2,3].map( x => (this.current_players[x] == true ? score     : -score ) ) :\n                    [0,1,2,3].map( x => (this.current_players[x] == true ? score * 3 : -score ) );    \n    // the round\n    let round = { nr: this.rounds.size+1, gametype: this.current_gametype, s1: scores[0], s2: scores[1], s3: scores[2], s4: scores[3] }\n    // persist\n    this.gameDb.get('rounds').set( round );\n    // this.gameDb.put({ totals: { t1: t1, t2: t2, t3: t3, t4: t4 }});\n    // deselect players\n    this.current_players = no_players();\n  }\n\n  removeRound(id) { \n    this.rounds.delete(id); // delete from list\n    this.gameDb.get('rounds').get(id).put(null); // delete from store\n  }\n  \n  no_players() { \n    return [false, false, false, false];\n  }  \n}\n","// import {gun} from 'gun';\nimport {GunDb} from 'gundb';\nimport {inject} from 'aurelia-framework';\n// import {lodash} from 'lodash';\n\n@inject(GunDb)\nexport class Games {  \n  constructor(gunDb)  {\n    this.gamesDb = gunDb.db.get('games/koen');\n    this.games = new Map();    \n    this.gamesDb.map().on((game, id) => {      \n      if (game) { \n        this.games.set(id,game);\n      } else {\n        this.games.delete(id);\n      }\n    });    \n  }\n\n  deactivate() {\n    console.log(\"stop listening to gundb events\");\n    this.gamesDb.off();\n  }  \n\n  removeGame(id) { \n    this.games.delete(id); // delete from list\n    this.gamesDb.get(id).put(null); // delete from store\n  }\n\n  newGame() { \n    console.log('fetching random name for game');\n    fetch('http://setgetgo.com/randomword/get.php')\n      .then((response) => {return response.text(); })\n      .then((name) => { console.log('response', name); return this.gamesDb.set( {name: name} ); });\n  }\n\n  // created() { \n  // }\n    \n  // activate(params) {\n  // }  \n}\n\n","export class GunDb {\n  constructor() { \n    this.db = Gun('http://colour-whist-gun.herokuapp.com/gun');\n    // this.db = Gun('https://gun-jfulqixzue.now.sh/gun');\n  }\n}","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","html { \n    background-color: grey;\n    font-family: Courier New, Courier, monospace;\n}\nbody { \n    background-color: grey;\n    margin: 0px;\n}\n#container {\n    padding-top: 1em;\n    padding-bottom: 1em;\n    background-color: white;\n    margin-left: auto;\n    margin-right: auto;\n    width: 750px;\n}\n"],"sourceRoot":".."}